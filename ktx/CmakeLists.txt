function(set_tool_properties tool_target)
endfunction()

function(set_code_sign tool_target)
endfunction()

function(create_version_header dest_path target)

    # set(version_h_output ${PROJECT_SOURCE_DIR}/${dest_path}/version.h)

    # if(CMAKE_HOST_WIN32)
    #     add_custom_command(
    #         OUTPUT ${version_h_output}
    #         # On Windows this command has to be invoked by a shell in order to work
    #         COMMAND ${BASH_EXECUTABLE} -c "\"scripts/mkversion\" \"-v\" \"${KTX_GIT_VERSION_FULL}\" \"-o\" \"version.h\" \"${dest_path}\""
    #         WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    #         COMMENT "Generate ${version_h_output}"
    #         VERBATIM
    #     )
    # else()
    #     add_custom_command(
    #         OUTPUT ${version_h_output}
    #         COMMAND scripts/mkversion -v ${KTX_GIT_VERSION_FULL} -o version.h ${dest_path}
    #         WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    #         COMMENT "Generate ${version_h_output}"
    #         VERBATIM
    #     )
    # endif()

    # set(version_target ${target}_version)
    # add_custom_target(${version_target} DEPENDS ${version_h_output})
    # add_dependencies(${target} ${version_target})
    # target_sources(${target} PRIVATE ${version_h_output})

endfunction()

#########################################################################

add_library(objUtil STATIC
    utils/argparser.cpp
    utils/argparser.h
    utils/ktxapp.h
    utils/sbufstream.h
    utils/scapp.h
    utils/stdafx.h
    utils/platform_utils.h
    utils/unused.h
)
target_include_directories(
    objUtil
    PUBLIC
    utils
)
target_compile_features(
    objUtil
    PUBLIC
    cxx_std_11
)


#########################################################################
# Copyright 2017-2020 The Khronos Group Inc.
# SPDX-License-Identifier: Apache-2.0

add_subdirectory(imageio)
# add_subdirectory(ktx)
# add_subdirectory(ktx2check)
# add_subdirectory(ktx2ktx2)
# add_subdirectory(ktxinfo)
# add_subdirectory(ktxsc)
# add_subdirectory(toktx)
add_subdirectory(ktxdll)

# install(TARGETS
#     ktxtools

#     # ktx2check
#     # ktx2ktx2
#     # ktxinfo
#     # ktxsc
#     # toktx
#     # ktxdll
#     RUNTIME
#     DESTINATION ${CMAKE_INSTALL_BINDIR}
#     COMPONENT tools
# )
